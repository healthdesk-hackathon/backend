# Generated by Django 3.0.4 on 2020-04-04 07:25

from django.db import migrations

from custom_auth.utils import get_user_model

permissions = [
    {'app_label': 'patient_tracker', 'model': 'bed'},
    {'app_label': 'patient_tracker', 'model': 'bedtype'},
    {'app_label': 'patient_tracker', 'model': 'bedassignment'},
    {'app_label': 'patient_tracker', 'model': 'discharge'},
    {'app_label': 'patient_tracker', 'model': 'healthsnapshot'},
    {'app_label': 'patient_tracker', 'model': 'admission'},
]


def make_permissions(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    manager_group = Group.objects.create(name='Manager')

    for perm in permissions:
        for action in ['add', 'view', 'change', 'delete']:
            new_perm = Permission.objects.get(codename=f'{action}_{perm["model"]}', content_type__app_label=perm['app_label'])
            manager_group.permissions.add(new_perm)


def create_manager(apps, schema_editor):
    User = get_user_model()

    manager = User.objects.create_user('manager', 'manager@test.com')
    manager.set_password('MpwBxWJJjkp3')
    manager.is_staff = True
    manager.save()


class Migration(migrations.Migration):

    atomic = False

    dependencies = [
        ('custom_auth', '0003_set_admin_as_staff'),
    ]

    operations = [
        migrations.RunPython(make_permissions),
        migrations.RunPython(create_manager)
    ]
